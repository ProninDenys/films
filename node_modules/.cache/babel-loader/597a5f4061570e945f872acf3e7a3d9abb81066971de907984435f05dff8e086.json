{"ast":null,"code":"var _jsxFileName = \"/Users/denispronin/Desktop/Homework/project_9/9/src/SearchMovies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { searchMovies, getGenres, discoverMovies } from './api'; // Импортируем функции для работы с фильтрами\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchMovies = () => {\n  _s();\n  const [query, setQuery] = useState(''); // Поисковый запрос\n  const [movies, setMovies] = useState([]); // Найденные фильмы\n  const [genres, setGenres] = useState([]); // Жанры для фильтров\n  const [selectedGenre, setSelectedGenre] = useState(''); // Выбранный жанр\n  const [year, setYear] = useState(''); // Выбранный год\n  const [rating, setRating] = useState(''); // Выбранный рейтинг\n\n  useEffect(() => {\n    // Запрос для получения списка жанров при загрузке компонента\n    const fetchGenres = async () => {\n      const response = await getGenres();\n      setGenres(response.data.genres);\n    };\n    fetchGenres();\n  }, []);\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (query.trim() !== '') {\n      try {\n        const response = await searchMovies(query); // Поиск фильмов по запросу\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Ошибка при поиске фильмов:', error);\n      }\n    } else if (selectedGenre || year || rating) {\n      try {\n        const response = await discoverMovies(year, selectedGenre, rating); // Поиск с фильтрами\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Ошибка при фильтрации фильмов:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Search for a movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: year,\n          onChange: e => setYear(e.target.value),\n          placeholder: \"Enter year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedGenre,\n          onChange: e => setSelectedGenre(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre.id,\n            children: genre.name\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: rating,\n          onChange: e => setRating(e.target.value),\n          placeholder: \"Enter rating from 0 to 10\",\n          min: \"0\",\n          max: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", movie.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchMovies, \"VxdYwTI63Nwrp0gGKARP/YFK4jk=\");\n_c = SearchMovies;\nexport default SearchMovies;\nvar _c;\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"names":["React","useState","useEffect","searchMovies","getGenres","discoverMovies","jsxDEV","_jsxDEV","SearchMovies","_s","query","setQuery","movies","setMovies","genres","setGenres","selectedGenre","setSelectedGenre","year","setYear","rating","setRating","fetchGenres","response","data","handleSearch","e","preventDefault","trim","results","error","console","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","genre","id","name","min","max","length","movie","title","vote_average","_c","$RefreshReg$"],"sources":["/Users/denispronin/Desktop/Homework/project_9/9/src/SearchMovies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { searchMovies, getGenres, discoverMovies } from './api'; // Импортируем функции для работы с фильтрами\n\nconst SearchMovies = () => {\n  const [query, setQuery] = useState(''); // Поисковый запрос\n  const [movies, setMovies] = useState([]); // Найденные фильмы\n  const [genres, setGenres] = useState([]); // Жанры для фильтров\n  const [selectedGenre, setSelectedGenre] = useState(''); // Выбранный жанр\n  const [year, setYear] = useState(''); // Выбранный год\n  const [rating, setRating] = useState(''); // Выбранный рейтинг\n\n  useEffect(() => {\n    // Запрос для получения списка жанров при загрузке компонента\n    const fetchGenres = async () => {\n      const response = await getGenres();\n      setGenres(response.data.genres);\n    };\n    fetchGenres();\n  }, []);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (query.trim() !== '') {\n      try {\n        const response = await searchMovies(query); // Поиск фильмов по запросу\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Ошибка при поиске фильмов:', error);\n      }\n    } else if (selectedGenre || year || rating) {\n      try {\n        const response = await discoverMovies(year, selectedGenre, rating); // Поиск с фильтрами\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Ошибка при фильтрации фильмов:', error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Search for a movie\"\n        />\n        <button type=\"submit\">Search</button>\n\n        <div>\n          <label>Year:</label>\n          <input\n            type=\"number\"\n            value={year}\n            onChange={(e) => setYear(e.target.value)}\n            placeholder=\"Enter year\"\n          />\n        </div>\n\n        <div>\n          <label>Genre:</label>\n          <select value={selectedGenre} onChange={(e) => setSelectedGenre(e.target.value)}>\n            <option value=\"\">Select genre</option>\n            {genres.map((genre) => (\n              <option key={genre.id} value={genre.id}>\n                {genre.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div>\n          <label>Rating:</label>\n          <input\n            type=\"number\"\n            value={rating}\n            onChange={(e) => setRating(e.target.value)}\n            placeholder=\"Enter rating from 0 to 10\"\n            min=\"0\"\n            max=\"10\"\n          />\n        </div>\n      </form>\n\n      <div>\n        {movies.length > 0 ? (\n          movies.map((movie) => (\n            <div key={movie.id}>\n              <h3>{movie.title}</h3>\n              <p>Rating: {movie.vote_average}</p>\n            </div>\n          ))\n        ) : (\n          <p>No movies found</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchMovies;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}